@page "/products/add"
@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@inject HttpClient HttpClient
@inject MessageService _message

<Form Model="@viewModel"
    Layout="@FormLayout.Vertical"
    LabelColOffset="8"
    WrapperColOffset="8"
    WrapperColSpan="8"
    OnFinish="Submit"
    >
    <FormItem Label="Nome">
        <Input @bind-Value="@context.Name" />
    </FormItem>
    <FormItem Label="Descrição">
        <Input @bind-Value="@context.Description" />
    </FormItem>
    <FormItem Label="Preço" WrapperColSpan="8" WrapperColOffset="8" >
        <AntDesign.InputNumber @bind-Value="@context.Price" Formatter="PriceFormatter" Parser="Parse1" Min="0" Max="9999"/>
    </FormItem>
    <FormItem>
        <Checkbox @bind-Value="context.IsActive">Ativo</Checkbox>
    </FormItem>
    <FormItem>
        <InputFile OnChange="HandleFileSelected" />
@*        <Upload 
            Action="https://localhost:5001/api/images"
            Name="avatar"
            @bind-FileList="fileList"
            ShowButton="fileList?.Count < 8"
            ListType="picture-card"
            OnPreview="(file)=> {
                previewVisible = true;
                previewTitle = file.FileName;
                imgUrl = file.Url;
            }"
            OnChange="HandleChange">
            <div>
                <Icon Type="plus"></Icon>
                <div className="ant-upload-text">Upload</div>
            </div>
        </Upload>*@
    </FormItem>

    <FormItem WrapperColOffset="8" WrapperColSpan="8" Class="submit-item">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Submit
        </Button>
    </FormItem>
</Form>

@*<Modal Visible="previewVisible"
    Title="previewTitle"
    OnCancel="()=> previewVisible=false">
    <img style="width: 100%" src="@imgUrl" />
</Modal>
*@
@code {
    bool previewVisible = false;
    string previewTitle = string.Empty;
    string imgUrl = string.Empty;

    IBrowserFile? file;

    ProductGridItemViewModel viewModel = new();
    List<UploadFileItem> fileList = new();

    private string PriceFormatter(double value)
    {
        return $"R$ {value.ToString("N2")}";
    }

    private string Parse1(string value)
    {
       return Regex.Replace(value, @"[R$\s]", "");
    }

    void HandleChange(UploadInfo fileinfo)
    {
        if (fileinfo.File.State == UploadState.Success)
        {
            fileinfo.File.Url = fileinfo.File.ObjectURL;
        }
    }

    void HandleFileSelected(InputFileChangeEventArgs e)
    {
        file = e.GetMultipleFiles().FirstOrDefault();
    }

    async Task Submit()
    {
        var form = new MultipartFormDataContent();

        //form.Add(viewModel.Name, nameof(viewModel.Name));
        if(file is not null)
        {
            form.Add(new StreamContent(file.OpenReadStream()), "image", file.Name);
        }
        form.Add(new StringContent(viewModel.Name), nameof(viewModel.Name));
        form.Add(new StringContent(viewModel.Description), nameof(viewModel.Description));
        form.Add(new StringContent(viewModel.IsActive.ToString()), nameof(viewModel.IsActive));
        form.Add(new StringContent(viewModel.Price.ToString()), nameof(viewModel.Price));

        var response = await HttpClient.PostAsync("/api/products", form);

        var result = await response.Content.ReadAsStringAsync();

        WriteLine(result);
    }
}